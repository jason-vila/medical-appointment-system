@model IEnumerable<sistema_citas_medicas.Models.Usuario>

@{
    ViewBag.Title = "Listado Usuarios";
}

<h2>Listado Usuarios</h2>

<p>
    @Html.ActionLink("Crear Nuevo Administrador", "Crear")
</p>

<div style="margin-bottom: 15px;">
    <a class="btn btn-success" href="@Url.Action("ExportarExcel", "Usuario")">📊 Exportar Excel</a>
    <a class="btn btn-danger" href="@Url.Action("ExportarPDF", "Usuario")">📄 Exportar PDF</a>
</div>

<table class="table">
    <tr>
        <th>@Html.DisplayNameFor(model => model.IdUsuario)</th>
        <th>@Html.DisplayNameFor(model => model.Nombre)</th>
        <th>@Html.DisplayNameFor(model => model.Apellido)</th>
        <th>@Html.DisplayNameFor(model => model.Correo)</th>
        <th>@Html.DisplayNameFor(model => model.Telefono)</th>
        <th>@Html.DisplayNameFor(model => model.Rol)</th>
        <th>@Html.DisplayNameFor(model => model.FotoPerfil)</th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.IdUsuario)</td>
            <td>@Html.DisplayFor(modelItem => item.Nombre)</td>
            <td>@Html.DisplayFor(modelItem => item.Apellido)</td>
            <td>@Html.DisplayFor(modelItem => item.Correo)</td>
            <td>@Html.DisplayFor(modelItem => item.Telefono)</td>
            <td>@Html.DisplayFor(modelItem => item.Rol)</td>
            <td>@Html.DisplayFor(modelItem => item.FotoPerfil)</td>
            <td>
                @Html.ActionLink("Editar", "Editar", new { id = item.IdUsuario }) |
                @Html.ActionLink("Detalle", "Detalle", new { id = item.IdUsuario }) |
                @Html.ActionLink("Eliminar", "Eliminar", new { id = item.IdUsuario })
            </td>
        </tr>
    }
</table>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        .swal2-popup.chatgpt-theme {
            background-color: #2b2b2b; /* gris oscuro */
            color: #f1f1f1; /* texto blanco */
            border-radius: 1rem;
        }

        .swal2-title {
            color: #ffffff !important;
        }

        .swal2-confirm.chatgpt-btn {
            background-color: #3b82f6 !important; /* azul elegante */
            color: #ffffff !important;
            border: none;
            padding: 0.6rem 1.2rem;
            font-weight: bold;
            border-radius: 0.5rem;
        }

        .swal2-icon-success {
            border-color: #3b82f6 !important;
            color: #3b82f6 !important;
        }
    </style>

    <script>
        @if (TempData["Success"] != null)
        {
            <text>
                Swal.fire({
                    icon: 'success',
                    title: 'Éxito',
                    text: @Html.Raw(Json.Encode(TempData["Success"])),
                    customClass: {
                        popup: 'chatgpt-theme',
                        confirmButton: 'chatgpt-btn'
                    },
                    buttonsStyling: false
                });
            </text>
        }
    </script>
}


